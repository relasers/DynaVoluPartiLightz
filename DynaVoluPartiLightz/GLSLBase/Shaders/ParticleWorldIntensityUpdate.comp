#version 430 compatibility
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout( std140, binding= 4 ) buffer ParticlePosition
{
	vec4 Positions[];
};

layout (rgba32f, binding = 0) uniform image3D destTex;


layout( local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
	
	uint gid = gl_GlobalInvocationID.x;
	ivec3 particlePosition =ivec3(Positions[ gid ].x, Positions[ gid ].y,Positions[ gid ].z );

	const int dist = 3;

	// 레이 쏘는걸로 바꿔야하나?

	for(int i =-dist;i<dist;++i)
	{
		for(int j =-dist;j<dist;++j)
		{
			for(int k =-dist;k<dist;++k)
			{
				ivec3 pixel_coords = particlePosition;

				pixel_coords += ivec3(i,j,k);
				pixel_coords.x = clamp(pixel_coords.x,0,128);
				pixel_coords.y = clamp(pixel_coords.y,0,128);
				pixel_coords.z = clamp(pixel_coords.z,0,128);

				vec4 pixel = vec4(
				pixel_coords.x/128.0f,
				pixel_coords.y/128.0f,
				pixel_coords.z/128.0f,
				1
				);

				float value = distance(particlePosition, pixel_coords );

				vec4 final_color;
				final_color.x = mix(1,0,value/dist);
				final_color.y = mix(1,0,value/dist);
				final_color.z = mix(1,0,value/dist);
				final_color = clamp(final_color,0,1);

				vec4 stored_pixel = imageLoad(destTex, pixel_coords);
				imageStore (destTex, pixel_coords, stored_pixel+final_color );
			}
		}
	}
   

}