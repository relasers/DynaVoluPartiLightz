#version 430 compatibility
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout( std140, binding= 4 ) buffer ParticlePosition
{
	vec4 Positions[];
};
layout( std140, binding= 5 ) buffer ParticleVelocity
{
	vec4 Velocities[];
};



layout( local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
	const vec3 G = vec3( 0., -9.8, 0. );
	const float DT = 0.0225;

	uint gid = gl_GlobalInvocationID.x; // the .y and .z are both 1 in this case
	vec3 p = Positions[ gid ].xyz;
	vec3 v = Velocities[ gid ].xyz;

	//vec3 pp = p + v*DT + .5*DT*DT*G;
	//vec3 vp = v + G*DT;

	vec3 pp = p + v*DT;

	if (pp.x < 0 || pp.x > 100) Velocities[ gid ].x *= -1;
	if (pp.y < 0 || pp.y > 20) Velocities[ gid ].y *= -1;
	if (pp.z < 0 || pp.z > 100) Velocities[ gid ].z *= -1;

	Positions[ gid ].xyz = pp;
	//Velocities[ gid ].xyz = vp;
}